{"ast":null,"code":"var _jsxFileName = \"/Users/tikhonovaks/dev/mesto-react/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\n// Импортируем объект контекста:\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(card, onCardClick, handleLikeClick) {\n  _s();\n  // Подписываемся на контекст CurrentUserContext:\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = card.owner._id === currentUser._id;\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = `element__like-button ${isLiked && 'element__like-button_active'}`;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"element\",\n    onClick: _ => onCardClick(card)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","CurrentUserContext","jsxDEV","_jsxDEV","Card","card","onCardClick","handleLikeClick","_s","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","i","cardLikeButtonClassName","className","onClick","_","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tikhonovaks/dev/mesto-react/src/components/Card.js"],"sourcesContent":["import React from 'react';\n// Импортируем объект контекста:\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(card, onCardClick, handleLikeClick) {\n  // Подписываемся на контекст CurrentUserContext:\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = card.owner._id === currentUser._id;\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = `element__like-button ${isLiked && 'element__like-button_active'}`;\n\n  return (\n    <li className=\"element\" onClick={(_) => onCardClick(card)}>\n      \n    </li>\n  );\n}\n\nexport default Card;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,kBAAkB,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,SAASC,IAAIA,CAACC,IAAI,EAAEC,WAAW,EAAEC,eAAe,EAAE;EAAAC,EAAA;EAChD;EACA,MAAMC,WAAW,GAAGT,KAAK,CAACU,UAAU,CAACT,kBAAkB,CAAC;;EAExD;EACA,MAAMU,KAAK,GAAGN,IAAI,CAACO,KAAK,CAACC,GAAG,KAAKJ,WAAW,CAACI,GAAG;EAChD;EACA,MAAMC,OAAO,GAAGT,IAAI,CAACU,KAAK,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACJ,GAAG,KAAKJ,WAAW,CAACI,GAAG,CAAC;EACjE;EACA,MAAMK,uBAAuB,GAAI,wBAAuBJ,OAAO,IAAI,6BAA8B,EAAC;EAElG,oBACEX,OAAA;IAAIgB,SAAS,EAAC,SAAS;IAACC,OAAO,EAAGC,CAAC,IAAKf,WAAW,CAACD,IAAI;EAAE;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAErD;AAET;AAACjB,EAAA,CAhBQJ,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAkBb,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}