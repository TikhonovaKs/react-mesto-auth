{"ast":null,"code":"var _jsxFileName = \"/Users/tikhonovaks/dev/react-mesto-auth/src/components/ProtectedRoute.js\";\nimport { Route, Routes } from 'react-router-dom';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\n\n// export function ProtectedRoute({ children, ...props }) {\n//   return props.isLoggedIn ? children : <Navigate replace to=\"/sign-in\" />;\n// }\n\n// export function ProtectedRoute({ children: Component, ...props }) {\n//   // это тернарный оператор, который проверяет значение свойства loggedIn из props. \n//   // Если loggedIn = true, возвращается компонент Component (компонент, переданный в качестве element). \n//   // В этом случае, компонент Component будет отображаться со всеми props. \n//   // Если loggedIn равно false, то происходит редирект на страницу входа (/login) с использованием компонента Navigate.\n//   // При редиректе также передается дополнительное состояние (state), в котором указывается backUrl \n//   // со значением текущего пути (pathname). \n//   // Это позволяет вернуть пользователя на исходную страницу после успешного входа.\n//   return props.isLoggedIn ? <children {...props} /> : <Navigate replace to='/sign-in' />\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ProtectedRoute(_ref) {\n  let {\n    component: Component,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      children: () => props.isLoggedIn ? /*#__PURE__*/_jsxDEV(Component, {\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/sign-in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Route","Routes","React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","_ref","component","Component","props","children","exact","isLoggedIn","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/tikhonovaks/dev/react-mesto-auth/src/components/ProtectedRoute.js"],"sourcesContent":["import { Route, Routes } from 'react-router-dom';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\n\n// export function ProtectedRoute({ children, ...props }) {\n//   return props.isLoggedIn ? children : <Navigate replace to=\"/sign-in\" />;\n// }\n\n// export function ProtectedRoute({ children: Component, ...props }) {\n//   // это тернарный оператор, который проверяет значение свойства loggedIn из props. \n//   // Если loggedIn = true, возвращается компонент Component (компонент, переданный в качестве element). \n//   // В этом случае, компонент Component будет отображаться со всеми props. \n//   // Если loggedIn равно false, то происходит редирект на страницу входа (/login) с использованием компонента Navigate.\n//   // При редиректе также передается дополнительное состояние (state), в котором указывается backUrl \n//   // со значением текущего пути (pathname). \n//   // Это позволяет вернуть пользователя на исходную страницу после успешного входа.\n//   return props.isLoggedIn ? <children {...props} /> : <Navigate replace to='/sign-in' />\n// }\n\nexport function ProtectedRoute({ component: Component, ...props }){\n  return (\n    <Routes>\n    <Route exact>\n      {\n        () => props.isLoggedIn ? <Component {...props} /> : <Navigate to=\"/sign-in\" />\n      }\n    </Route>\n    </Routes>\n)}\n\n"],"mappings":";AAAA,SAASA,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;;AAE3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,SAASC,cAAcA,CAAAC,IAAA,EAAoC;EAAA,IAAnC;IAAEC,SAAS,EAAEC,SAAS;IAAE,GAAGC;EAAM,CAAC,GAAAH,IAAA;EAC/D,oBACEF,OAAA,CAACJ,MAAM;IAAAU,QAAA,eACPN,OAAA,CAACL,KAAK;MAACY,KAAK;MAAAD,QAAA,EAERA,CAAA,KAAMD,KAAK,CAACG,UAAU,gBAAGR,OAAA,CAACI,SAAS;QAAA,GAAKC;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,gBAAGZ,OAAA,CAACF,QAAQ;QAACe,EAAE,EAAC;MAAU;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAE1E;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AACZ;AAACE,EAAA,GATcb,cAAc;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}