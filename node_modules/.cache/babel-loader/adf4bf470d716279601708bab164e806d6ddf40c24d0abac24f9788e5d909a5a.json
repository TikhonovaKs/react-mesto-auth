{"ast":null,"code":"var _jsxFileName = \"/Users/tikhonovaks/dev/react-mesto-auth/src/components/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { Children } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute(_ref) {\n  _s();\n  let {\n    element: Component,\n    ...props\n  } = _ref;\n  // хук useLocation - хук из React Router для получения текущего пути (pathname) URL. \n  // хук возвращает объект с информацией о текущем местоположении в приложении.\n  const {\n    pathname\n  } = useLocation();\n  // это тернарный оператор, который проверяет значение свойства loggedIn из props. \n  // Если loggedIn = true, возвращается компонент Component (компонент, переданный в качестве element). \n  // В этом случае, компонент Component будет отображаться со всеми props. \n  // Если loggedIn равно false, то происходит редирект на страницу входа (/login) с использованием компонента Navigate.\n  // При редиректе также передается дополнительное состояние (state), в котором указывается backUrl \n  // со значением текущего пути (pathname). \n  // Это позволяет вернуть пользователя на исходную страницу после успешного входа.\n  return props.isLoggedIn ? /*#__PURE__*/_jsxDEV(Children, {\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 29\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/sign-in\",\n    state: {\n      backUrl: pathname\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 55\n  }, this);\n}\n_s(ProtectedRoute, \"qVMqkCpYCjknUqSjfMln5RFSkbo=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Children","Navigate","useLocation","jsxDEV","_jsxDEV","ProtectedRoute","_ref","_s","element","Component","props","pathname","isLoggedIn","fileName","_jsxFileName","lineNumber","columnNumber","to","state","backUrl","_c","$RefreshReg$"],"sources":["/Users/tikhonovaks/dev/react-mesto-auth/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { Children } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\n\nexport default function ProtectedRoute({ element: Component, ...props }) {\n  // хук useLocation - хук из React Router для получения текущего пути (pathname) URL. \n  // хук возвращает объект с информацией о текущем местоположении в приложении.\n  const { pathname } = useLocation();\n  // это тернарный оператор, который проверяет значение свойства loggedIn из props. \n  // Если loggedIn = true, возвращается компонент Component (компонент, переданный в качестве element). \n  // В этом случае, компонент Component будет отображаться со всеми props. \n  // Если loggedIn равно false, то происходит редирект на страницу входа (/login) с использованием компонента Navigate.\n  // При редиректе также передается дополнительное состояние (state), в котором указывается backUrl \n  // со значением текущего пути (pathname). \n  // Это позволяет вернуть пользователя на исходную страницу после успешного входа.\n  return props.isLoggedIn ? <Children {...props} /> : <Navigate to='/sign-in' state={{ backUrl: pathname }} />;\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,eAAe,SAASC,cAAcA,CAAAC,IAAA,EAAmC;EAAAC,EAAA;EAAA,IAAlC;IAAEC,OAAO,EAAEC,SAAS;IAAE,GAAGC;EAAM,CAAC,GAAAJ,IAAA;EACrE;EACA;EACA,MAAM;IAAEK;EAAS,CAAC,GAAGT,WAAW,EAAE;EAClC;EACA;EACA;EACA;EACA;EACA;EACA;EACA,OAAOQ,KAAK,CAACE,UAAU,gBAAGR,OAAA,CAACJ,QAAQ;IAAA,GAAKU;EAAK;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI,gBAAGZ,OAAA,CAACH,QAAQ;IAACgB,EAAE,EAAC,UAAU;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAER;IAAS;EAAE;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC9G;AAACT,EAAA,CAZuBF,cAAc;EAAA,QAGfH,WAAW;AAAA;AAAAkB,EAAA,GAHVf,cAAc;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}