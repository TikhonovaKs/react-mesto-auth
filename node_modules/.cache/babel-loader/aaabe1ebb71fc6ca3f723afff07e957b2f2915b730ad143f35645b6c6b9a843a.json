{"ast":null,"code":"var _jsxFileName = \"/Users/tikhonovaks/dev/react-mesto-auth/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport Header from './Header';\nimport Authentication from './Authentication';\nimport * as auth from '../utils/auth.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login(_ref) {\n  _s();\n  let {\n    handleLogin\n  } = _ref;\n  // Состояние формы входа в систему formValue (электронная почта, пароль).\n  const [formValue, setFormValue] = useState({\n    password: '',\n    email: ''\n  });\n  // Состояние сообщения об ошибке:\n  const [errorMessage, setErrorMessage] = useState('');\n  // вызываем useNavigate(), useLocation() для доступа к функциям navigate (для перехода на другие страницы)\n  // и location:\n  const navigate = useNavigate();\n  const location = useLocation();\n  const checkToken = () => {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      auth.checkToken(jwt).then(user => {\n        var _location$state;\n        // переменная url получает значение backUrl из объекта location.state,\n        // если оно существует. Иначе, если backUrl не определено или равно null, присваивается значение '/main'.\n        const url = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.backUrl) || '/main';\n        handleLogin(user);\n        // навигируею пользователя на указанный URL:\n        navigate(url);\n      }).catch(err => console.log(err));\n    }\n  };\n  // Хук useEffect используется для выполнения функции checkToken() при монтировании компонента\n  // (пустой массив зависимостей [] указывает, что эффект должен быть выполнен только один раз при\n  // инициализации компонента):\n  useEffect(() => {\n    checkToken();\n  }, []);\n\n  // Обработчик изменения полей формы:\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValue({\n      ...formValue,\n      [name]: value\n    });\n  };\n\n  // Обработчик отправки формы:\n  const handleSubmit = e => {\n    e.preventDefault();\n    // проверяется, что введенные пароли совпадают. Если нет, то устанавливается сообщение\n    // об ошибке с помощью setErrorMessage.\n    if (!formValue.password || !formValue.email) {\n      setErrorMessage('Both fields are required');\n      return;\n    }\n    // извлекаются значения username и password из состояния formValue.\n    const {\n      password,\n      email\n    } = formValue;\n\n    // если авторизацию апи проходим :\n    auth.login(password, email).then(data => {\n      if (data.token) {\n        var _location$state2;\n        localStorage.setItem('jwt', data.token);\n        handleLogin(data.user);\n        const url = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.backUrl) || '/main';\n        navigate(url);\n      }\n    }).catch(err => {\n      console.log(err);\n      setErrorMessage(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Authentication, {\n    authenticationName: \"login\",\n    authenticationTitle: \"\\u0412\\u0445\\u043E\\u0434\",\n    onSubmit: handleSubmit,\n    buttonName: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      type: \"email\",\n      name: \"email\",\n      autoComplete: \"email\",\n      className: \"authentication__input authentication__input_data_email\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"40\",\n      placeholder: \"Email\",\n      value: formValue.email,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"input-email-error\",\n      className: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      autoComplete: \"new-password\",\n      className: \"authentication__input authentication__input_data_password\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"200\",\n      placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      value: formValue.password,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"input-password-error\",\n      className: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"iXS3P2dFfKrFcYI80e0ZKTXhqhU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","Header","Authentication","auth","jsxDEV","_jsxDEV","Login","_ref","_s","handleLogin","formValue","setFormValue","password","email","errorMessage","setErrorMessage","navigate","location","checkToken","jwt","localStorage","getItem","then","user","_location$state","url","state","backUrl","catch","err","console","log","handleChange","e","name","value","target","handleSubmit","preventDefault","login","data","token","_location$state2","setItem","authenticationName","authenticationTitle","onSubmit","buttonName","children","id","type","autoComplete","className","required","minLength","maxLength","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tikhonovaks/dev/react-mesto-auth/src/components/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport Header from './Header';\nimport Authentication from './Authentication';\nimport * as auth from '../utils/auth.js';\n\nfunction Login({ handleLogin }) {\n  // Состояние формы входа в систему formValue (электронная почта, пароль).\n  const [formValue, setFormValue] = useState({\n    password: '',\n    email: '',\n  });\n  // Состояние сообщения об ошибке:\n  const [errorMessage, setErrorMessage] = useState('');\n  // вызываем useNavigate(), useLocation() для доступа к функциям navigate (для перехода на другие страницы)\n  // и location:\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const checkToken = () => {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      auth\n        .checkToken(jwt)\n        .then((user) => {\n          // переменная url получает значение backUrl из объекта location.state,\n          // если оно существует. Иначе, если backUrl не определено или равно null, присваивается значение '/main'.\n          const url = location.state?.backUrl || '/main';\n          handleLogin(user);\n          // навигируею пользователя на указанный URL:\n          navigate(url);\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n  // Хук useEffect используется для выполнения функции checkToken() при монтировании компонента\n  // (пустой массив зависимостей [] указывает, что эффект должен быть выполнен только один раз при\n  // инициализации компонента):\n  useEffect(() => {\n    checkToken();\n  }, []);\n\n  // Обработчик изменения полей формы:\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValue({\n      ...formValue,\n      [name]: value,\n    });\n  };\n\n  // Обработчик отправки формы:\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // проверяется, что введенные пароли совпадают. Если нет, то устанавливается сообщение\n    // об ошибке с помощью setErrorMessage.\n    if (!formValue.password || !formValue.email) {\n      setErrorMessage('Both fields are required');\n      return;\n    }\n    // извлекаются значения username и password из состояния formValue.\n    const { password, email } = formValue;\n\n    // если авторизацию апи проходим :\n    auth\n      .login(password, email)\n      .then((data) => {\n        if (data.token) {\n          localStorage.setItem('jwt', data.token);\n          handleLogin(data.user);\n          const url = location.state?.backUrl || '/main';\n          navigate(url);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(err);\n      });\n  };\n\n  return (\n    <Authentication authenticationName=\"login\" authenticationTitle=\"Вход\" onSubmit={handleSubmit} buttonName=\"Войти\">\n      <input\n        id=\"email\"\n        type=\"email\"\n        name=\"email\"\n        autoComplete=\"email\"\n        className=\"authentication__input authentication__input_data_email\"\n        required\n        minLength=\"2\"\n        maxLength=\"40\"\n        placeholder=\"Email\"\n        value={formValue.email}\n        onChange={handleChange}\n      />\n      <span id=\"input-email-error\" className=\"error\">\n        {errorMessage}\n      </span>\n      <input\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        autoComplete=\"new-password\"\n        className=\"authentication__input authentication__input_data_password\"\n        required\n        minLength=\"2\"\n        maxLength=\"200\"\n        placeholder=\"Пароль\"\n        value={formValue.password}\n        onChange={handleChange}\n      />\n      <span id=\"input-password-error\" className=\"error\">\n        {errorMessage}\n      </span>\n    </Authentication>\n  );\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}