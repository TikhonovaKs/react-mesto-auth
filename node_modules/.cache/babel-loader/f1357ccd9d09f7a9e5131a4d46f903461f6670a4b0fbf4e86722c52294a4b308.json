{"ast":null,"code":"var _jsxFileName = \"/Users/tikhonovaks/dev/react-mesto-auth/src/components/ProtectedRoute.js\";\nimport React, { Children } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\n\n// export function ProtectedRoute({ children, ...props }) {\n//   return props.isLoggedIn ? children : <Navigate replace to=\"/sign-in\" />;\n// }\n\n// export function ProtectedRoute({ children: Component, ...props }) {\n//   // это тернарный оператор, который проверяет значение свойства loggedIn из props. \n//   // Если loggedIn = true, возвращается компонент Component (компонент, переданный в качестве element). \n//   // В этом случае, компонент Component будет отображаться со всеми props. \n//   // Если loggedIn равно false, то происходит редирект на страницу входа (/login) с использованием компонента Navigate.\n//   // При редиректе также передается дополнительное состояние (state), в котором указывается backUrl \n//   // со значением текущего пути (pathname). \n//   // Это позволяет вернуть пользователя на исходную страницу после успешного входа.\n//   return props.isLoggedIn ? <children {...props} /> : <Navigate replace to='/sign-in' />\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ProtectedRoute(_ref) {\n  let {\n    component: Component,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    exact: true,\n    children: () => props.isLoggedIn ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"./sign-in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 61\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Children","Navigate","useLocation","jsxDEV","_jsxDEV","ProtectedRoute","_ref","component","Component","props","Route","exact","children","isLoggedIn","fileName","_jsxFileName","lineNumber","columnNumber","Redirect","to","_c","$RefreshReg$"],"sources":["/Users/tikhonovaks/dev/react-mesto-auth/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { Children } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\n\n// export function ProtectedRoute({ children, ...props }) {\n//   return props.isLoggedIn ? children : <Navigate replace to=\"/sign-in\" />;\n// }\n\n// export function ProtectedRoute({ children: Component, ...props }) {\n//   // это тернарный оператор, который проверяет значение свойства loggedIn из props. \n//   // Если loggedIn = true, возвращается компонент Component (компонент, переданный в качестве element). \n//   // В этом случае, компонент Component будет отображаться со всеми props. \n//   // Если loggedIn равно false, то происходит редирект на страницу входа (/login) с использованием компонента Navigate.\n//   // При редиректе также передается дополнительное состояние (state), в котором указывается backUrl \n//   // со значением текущего пути (pathname). \n//   // Это позволяет вернуть пользователя на исходную страницу после успешного входа.\n//   return props.isLoggedIn ? <children {...props} /> : <Navigate replace to='/sign-in' />\n// }\n\nexport function ProtectedRoute({ component: Component, ...props   }){\n  return (\n    <Route exact>\n      {\n        () => props.isLoggedIn ? <Component {...props} /> : <Redirect to=\"./sign-in\" />\n      }\n    </Route>\n)}\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;;AAExD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,SAASC,cAAcA,CAAAC,IAAA,EAAsC;EAAA,IAArC;IAAEC,SAAS,EAAEC,SAAS;IAAE,GAAGC;EAAQ,CAAC,GAAAH,IAAA;EACjE,oBACEF,OAAA,CAACM,KAAK;IAACC,KAAK;IAAAC,QAAA,EAERA,CAAA,KAAMH,KAAK,CAACI,UAAU,gBAAGT,OAAA,CAACI,SAAS;MAAA,GAAKC;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,gBAAGb,OAAA,CAACc,QAAQ;MAACC,EAAE,EAAC;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAE3E;AACX;AAACG,EAAA,GAPcf,cAAc;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}