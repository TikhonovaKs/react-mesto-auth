{"ast":null,"code":"var _jsxFileName = \"/Users/tikhonovaks/dev/react-mesto-auth/src/components/ProtectedRoute.js\";\nimport React, { Children } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\n\n// export function ProtectedRoute({ children, ...props }) {\n//   return props.isLoggedIn ? children : <Navigate replace to=\"/sign-in\" />;\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ProtectedRoute(_ref) {\n  let {\n    children: Component,\n    ...props\n  } = _ref;\n  // это тернарный оператор, который проверяет значение свойства loggedIn из props. \n  // Если loggedIn = true, возвращается компонент Component (компонент, переданный в качестве element). \n  // В этом случае, компонент Component будет отображаться со всеми props. \n  // Если loggedIn равно false, то происходит редирект на страницу входа (/login) с использованием компонента Navigate.\n  // При редиректе также передается дополнительное состояние (state), в котором указывается backUrl \n  // со значением текущего пути (pathname). \n  // Это позволяет вернуть пользователя на исходную страницу после успешного входа.\n  return props.isLoggedIn ? /*#__PURE__*/_jsxDEV(\"children\", {\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 29\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    replace: true,\n    to: \"/sign-in\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 55\n  }, this);\n}\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Children","Navigate","useLocation","jsxDEV","_jsxDEV","ProtectedRoute","_ref","children","Component","props","isLoggedIn","fileName","_jsxFileName","lineNumber","columnNumber","replace","to","_c","$RefreshReg$"],"sources":["/Users/tikhonovaks/dev/react-mesto-auth/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { Children } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\n\n// export function ProtectedRoute({ children, ...props }) {\n//   return props.isLoggedIn ? children : <Navigate replace to=\"/sign-in\" />;\n// }\n\nexport function ProtectedRoute({ children: Component, ...props }) {\n  // это тернарный оператор, который проверяет значение свойства loggedIn из props. \n  // Если loggedIn = true, возвращается компонент Component (компонент, переданный в качестве element). \n  // В этом случае, компонент Component будет отображаться со всеми props. \n  // Если loggedIn равно false, то происходит редирект на страницу входа (/login) с использованием компонента Navigate.\n  // При редиректе также передается дополнительное состояние (state), в котором указывается backUrl \n  // со значением текущего пути (pathname). \n  // Это позволяет вернуть пользователя на исходную страницу после успешного входа.\n  return props.isLoggedIn ? <children {...props} /> : <Navigate replace to='/sign-in' />\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;;AAExD;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,SAASC,cAAcA,CAAAC,IAAA,EAAoC;EAAA,IAAnC;IAAEC,QAAQ,EAAEC,SAAS;IAAE,GAAGC;EAAM,CAAC,GAAAH,IAAA;EAC9D;EACA;EACA;EACA;EACA;EACA;EACA;EACA,OAAOG,KAAK,CAACC,UAAU,gBAAGN,OAAA;IAAA,GAAcK;EAAK;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI,gBAAGV,OAAA,CAACH,QAAQ;IAACc,OAAO;IAACC,EAAE,EAAC;EAAU;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACxF;AAACG,EAAA,GATeZ,cAAc;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}