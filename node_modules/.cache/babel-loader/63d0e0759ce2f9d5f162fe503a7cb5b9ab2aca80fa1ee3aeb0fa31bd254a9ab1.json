{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject('Произошла ошибка');\n  }\n  getAllPlaces() {\n    return fetch(`${this._url}cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  addPlace(data) {\n    return fetch(`${this._url}cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._checkResponse);\n  }\n  deletePlace(id) {\n    return fetch(`${this._url}cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  likeCard(id) {\n    return fetch(`${this._url}cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  disLikeCard(id) {\n    return fetch(`${this._url}cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  changeAvatar(link) {\n    return fetch(`${this._url}users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link.link\n      })\n    }).then(this._checkResponse);\n  }\n  editProfileInfo(data) {\n    return fetch(`${this._url}users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        about: data.job,\n        name: data.name\n      })\n    }).then(this._checkResponse);\n  }\n  getUserInfo() {\n    return fetch(`${this._url}users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-62/',\n  headers: {\n    'Content-Type': 'application/json',\n    authorization: 'fead1d69-c3b2-448b-95f9-e26a4c2cfad0'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","config","_url","url","_headers","headers","_checkResponse","res","ok","json","Promise","reject","getAllPlaces","fetch","method","then","addPlace","data","body","JSON","stringify","deletePlace","id","likeCard","disLikeCard","changeAvatar","link","avatar","editProfileInfo","about","job","name","getUserInfo","api","authorization"],"sources":["/Users/tikhonovaks/dev/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject('Произошла ошибка');\n  }\n\n  getAllPlaces() {\n    return fetch(`${this._url}cards`, {\n      method: 'GET',\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  addPlace(data) {\n    return fetch(`${this._url}cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._checkResponse);\n  }\n\n  deletePlace(id) {\n    return fetch(`${this._url}cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  likeCard(id) {\n    return fetch(`${this._url}cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  disLikeCard(id) {\n    return fetch(`${this._url}cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  changeAvatar(link) {\n    return fetch(`${this._url}users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({ avatar: link.link }),\n    }).then(this._checkResponse);\n  }\n\n  editProfileInfo(data) {\n    return fetch(`${this._url}users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({ about: data.job, name: data.name }),\n    }).then(this._checkResponse);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}users/me`, {\n      method: 'GET',\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-62/',\n  headers: {\n    'Content-Type': 'application/json',\n    authorization: 'fead1d69-c3b2-448b-95f9-e26a4c2cfad0',\n  },\n});\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}