{"ast":null,"code":"var _jsxFileName = \"/Users/tikhonovaks/dev/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport React from 'react';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Стейт, отвечающий за данные текущего пользователя\n  const [currentUser, setCurrentUser] = React.useState({});\n  // стейт для хранения карточек:\n  const [cards, setCards] = React.useState([]);\n  //switch state for edit profile popup:\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  //switch state for edit avatar popup:\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  //switch state for adding a place popup:\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  //switch state for image popup:\n  const [selectedCard, setSelectedCard] = React.useState(null);\n\n  //эффект обращения к API за инфо о пользователе и начальными карточками:\n  React.useEffect(() => {\n    api.getUserInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => console.log(err));\n    api.getAllPlaces().then(data => {\n      setCards(data.map(item => ({\n        likes: item.likes,\n        _id: item._id,\n        src: item.link,\n        alt: item.name,\n        owner: item.owner,\n        title: item.name\n      })));\n    }).catch(err => console.log(err));\n  }, []);\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n  function handleCardClick(curentCard) {\n    setSelectedCard(curentCard);\n  }\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n  const isOpen = isEditAvatarPopupOpen || isEditProfilePopupOpen || isAddPlacePopupOpen || selectedCard;\n\n  //React.useEffect(() => {\n  //   function closeByEscape(evt) {\n  //     if (evt.key === 'Escape') {\n  //       closeAllPopups();\n  //     }\n  //   }\n  //   if (isOpen) {\n  //     // навешиваем только при открытии\n  //     document.addEventListener('keydown', closeByEscape);\n  //     return () => {\n  //       document.removeEventListener('keydown', closeByEscape);\n  //     };\n  //   }\n  // }, [isOpen]);\n\n  function handleCardDelete(cardId) {\n    api.deletePlace(cardId).then(() => {\n      /* используя методы массива, создаем новый массив карточек newCards, где не будет карточки, которую мы только что удалили */\n      setCards(cards => cards.filter(c => c._id !== cardId));\n    }).catch(err => console.log(err));\n  }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.likeCard(card._id, !isLiked).then(newCard => {\n      const newCardItem = {\n        likes: newCard.likes,\n        _id: newCard._id,\n        src: newCard.link,\n        alt: newCard.name,\n        owner: newCard.owner,\n        title: newCard.name\n      };\n      setCards(state => state.map(c => c._id === card._id ? newCardItem : c));\n    }).catch(err => console.log(err));\n  }\n  function handleCardDisLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.disLikeCard(card._id, isLiked).then(newCard => {\n      const newCardItem = {\n        likes: newCard.likes,\n        _id: newCard._id,\n        src: newCard.link,\n        alt: newCard.name,\n        owner: newCard.owner,\n        title: newCard.name\n      };\n      setCards(state => state.map(c => c._id === card._id ? newCardItem : c));\n    }).catch(err => console.log(err));\n  }\n  function handleUpdateUser(userData) {\n    api.editProfileInfo(userData).then(userResponse => {\n      setCurrentUser(userResponse);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n  function handleUpdateAvatar(_ref) {\n    let {\n      avatar\n    } = _ref;\n    api.changeAvatar(avatar).then(linkResponse => {\n      setCurrentUser(linkResponse);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n  function handleAddPlace(place) {\n    api.addPlace(place).then(newCard => {\n      const newCardItem = {\n        likes: newCard.likes,\n        _id: newCard._id,\n        src: newCard.link,\n        alt: newCard.name,\n        owner: newCard.owner,\n        title: newCard.name\n      };\n      setCards([newCardItem, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick,\n        onCardDelete: handleCardDelete,\n        onCardLike: handleCardLike,\n        onCardDislike: handleCardDisLike,\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        popupName: \"popup_type_deleteCard\",\n        popupTitle: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        buttonName: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tn9oBjswKT8dnwkkxC1fYtrmti4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","Footer","PopupWithForm","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","React","api","CurrentUserContext","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","useState","cards","setCards","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","useEffect","getUserInfo","then","data","catch","err","console","log","getAllPlaces","map","item","likes","_id","src","link","alt","name","owner","title","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","curentCard","closeAllPopups","isOpen","handleCardDelete","cardId","deletePlace","filter","c","handleCardLike","card","isLiked","some","i","likeCard","newCard","newCardItem","state","handleCardDisLike","disLikeCard","handleUpdateUser","userData","editProfileInfo","userResponse","handleUpdateAvatar","_ref","avatar","changeAvatar","linkResponse","handleAddPlace","place","addPlace","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onCardDelete","onCardLike","onCardDislike","onClose","onUpdateUser","popupName","popupTitle","buttonName","onUpdateAvatar","_c","$RefreshReg$"],"sources":["/Users/tikhonovaks/dev/mesto-react/src/components/App.js"],"sourcesContent":["import Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport React from 'react';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n  // Стейт, отвечающий за данные текущего пользователя\n  const [currentUser, setCurrentUser] = React.useState({});\n  // стейт для хранения карточек:\n  const [cards, setCards] = React.useState([]);\n  //switch state for edit profile popup:\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  //switch state for edit avatar popup:\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  //switch state for adding a place popup:\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  //switch state for image popup:\n  const [selectedCard, setSelectedCard] = React.useState(null);\n\n  //эффект обращения к API за инфо о пользователе и начальными карточками:\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((data) => {\n        setCurrentUser(data);\n      })\n      .catch((err) => console.log(err));\n    api\n      .getAllPlaces()\n      .then((data) => {\n        setCards(\n          data.map((item) => ({\n            likes: item.likes,\n            _id: item._id,\n            src: item.link,\n            alt: item.name,\n            owner: item.owner,\n            title: item.name,\n          }))\n        );\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n\n  function handleCardClick(curentCard) {\n    setSelectedCard(curentCard);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  const isOpen = isEditAvatarPopupOpen || isEditProfilePopupOpen || isAddPlacePopupOpen || selectedCard;\n\n  //React.useEffect(() => {\n  //   function closeByEscape(evt) {\n  //     if (evt.key === 'Escape') {\n  //       closeAllPopups();\n  //     }\n  //   }\n  //   if (isOpen) {\n  //     // навешиваем только при открытии\n  //     document.addEventListener('keydown', closeByEscape);\n  //     return () => {\n  //       document.removeEventListener('keydown', closeByEscape);\n  //     };\n  //   }\n  // }, [isOpen]);\n\n  function handleCardDelete(cardId) {\n    api.deletePlace(cardId).then(() => {\n      /* используя методы массива, создаем новый массив карточек newCards, где не будет карточки, которую мы только что удалили */\n      setCards((cards) => cards.filter((c) => c._id !== cardId));\n    })\n    .catch((err) => console.log(err));\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .likeCard(card._id, !isLiked)\n      .then((newCard) => {\n        const newCardItem = {\n          likes: newCard.likes,\n          _id: newCard._id,\n          src: newCard.link,\n          alt: newCard.name,\n          owner: newCard.owner,\n          title: newCard.name,\n        };\n        setCards((state) => state.map((c) => (c._id === card._id ? newCardItem : c)));\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleCardDisLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .disLikeCard(card._id, isLiked)\n      .then((newCard) => {\n        const newCardItem = {\n          likes: newCard.likes,\n          _id: newCard._id,\n          src: newCard.link,\n          alt: newCard.name,\n          owner: newCard.owner,\n          title: newCard.name,\n        };\n        setCards((state) => state.map((c) => (c._id === card._id ? newCardItem : c)));\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateUser(userData) {\n    api\n      .editProfileInfo(userData)\n      .then((userResponse) => {\n        setCurrentUser(userResponse);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateAvatar({ avatar }) {\n    api\n      .changeAvatar(avatar)\n      .then((linkResponse) => {\n        setCurrentUser(linkResponse);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleAddPlace(place) {\n    api\n      .addPlace(place)\n      .then((newCard) => {\n        const newCardItem = {\n          likes: newCard.likes,\n          _id: newCard._id,\n          src: newCard.link,\n          alt: newCard.name,\n          owner: newCard.owner,\n          title: newCard.name,\n        };\n        setCards([newCardItem, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      {/* Внедряем» данные из currentUser с помощью провайдера контекста */}\n      <div className=\"App\">\n        <Header />\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          onCardDelete={handleCardDelete}\n          onCardLike={handleCardLike}\n          onCardDislike={handleCardDisLike}\n          cards={cards}\n        />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlace} />\n        <PopupWithForm popupName=\"popup_type_deleteCard\" popupTitle=\"Вы уверены?\" buttonName=\"Да\"></PopupWithForm>\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n        <Footer />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}