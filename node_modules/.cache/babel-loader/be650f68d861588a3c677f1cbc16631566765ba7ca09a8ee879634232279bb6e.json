{"ast":null,"code":"var _jsxFileName = \"/Users/tikhonovaks/dev/react-mesto-auth/src/components/EditAvatarPopup.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditAvatarPopup(_ref) {\n  _s();\n  let {\n    isOpen,\n    onClose,\n    onUpdateAvatar\n  } = _ref;\n  React.useEffect(() => {\n    avatarRef.current.value = '';\n  }, [isOpen]);\n\n  // записываем объект, возвращаемый хуком, в переменную\n  const avatarRef = React.useRef();\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateAvatar({\n      avatar: avatarRef.current.value /* Значение инпута, полученное с помощью рефа */\n    });\n  }\n\n  // Стейт, в котором содержится значение инпута\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    popupName: \"popup_type_avatar\",\n    popupTitle: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    isOpen: isOpen,\n    onClose: onClose,\n    buttonName: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    buttonNameIsLoad: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u0438\\u0435...\",\n    onSubmit: handleSubmit\n    //showCloseButton={true}\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"input-link-avatar\",\n      type: \"url\",\n      name: \"link\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n      className: \"popup__input popup__input_data_link\",\n      required: true,\n      ref: avatarRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"input-link-avatar-error\",\n      className: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(EditAvatarPopup, \"1FcxL6zzwaz+wNR/NZlbPkfoXEU=\");\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\nvar _c;\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"names":["React","PopupWithForm","jsxDEV","_jsxDEV","EditAvatarPopup","_ref","_s","isOpen","onClose","onUpdateAvatar","useEffect","avatarRef","current","value","useRef","handleSubmit","e","preventDefault","avatar","popupName","popupTitle","buttonName","buttonNameIsLoad","onSubmit","children","id","type","name","placeholder","className","required","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tikhonovaks/dev/react-mesto-auth/src/components/EditAvatarPopup.js"],"sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n  React.useEffect(() => {\n    avatarRef.current.value = '';\n  }, [isOpen]);\n\n  // записываем объект, возвращаемый хуком, в переменную\n  const avatarRef = React.useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    onUpdateAvatar({\n      avatar: avatarRef.current.value /* Значение инпута, полученное с помощью рефа */,\n    });\n  }\n\n  // Стейт, в котором содержится значение инпута\n  return (\n    <PopupWithForm\n      popupName=\"popup_type_avatar\"\n      popupTitle=\"Обновить аватар\"\n      isOpen={isOpen}\n      onClose={onClose}\n      buttonName=\"Сохранить\"\n      buttonNameIsLoad=\"Сохранение...\"\n      onSubmit={handleSubmit}\n      //showCloseButton={true}\n    >\n      <input\n        id=\"input-link-avatar\"\n        type=\"url\"\n        name=\"link\"\n        placeholder=\"Ссылка на аватар\"\n        className=\"popup__input popup__input_data_link\"\n        required\n        ref={avatarRef}\n      />\n      <span id=\"input-link-avatar-error\" className=\"error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,eAAeA,CAAAC,IAAA,EAAsC;EAAAC,EAAA;EAAA,IAArC;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAe,CAAC,GAAAJ,IAAA;EAC1DL,KAAK,CAACU,SAAS,CAAC,MAAM;IACpBC,SAAS,CAACC,OAAO,CAACC,KAAK,GAAG,EAAE;EAC9B,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAMI,SAAS,GAAGX,KAAK,CAACc,MAAM,EAAE;EAEhC,SAASC,YAAYA,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,EAAE;IAElBR,cAAc,CAAC;MACbS,MAAM,EAAEP,SAAS,CAACC,OAAO,CAACC,KAAK,CAAC;IAClC,CAAC,CAAC;EACJ;;EAEA;EACA,oBACEV,OAAA,CAACF,aAAa;IACZkB,SAAS,EAAC,mBAAmB;IAC7BC,UAAU,EAAC,uFAAiB;IAC5Bb,MAAM,EAAEA,MAAO;IACfC,OAAO,EAAEA,OAAQ;IACjBa,UAAU,EAAC,wDAAW;IACtBC,gBAAgB,EAAC,iEAAe;IAChCC,QAAQ,EAAER;IACV;IAAA;IAAAS,QAAA,gBAEArB,OAAA;MACEsB,EAAE,EAAC,mBAAmB;MACtBC,IAAI,EAAC,KAAK;MACVC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,wFAAkB;MAC9BC,SAAS,EAAC,qCAAqC;MAC/CC,QAAQ;MACRC,GAAG,EAAEpB;IAAU;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACf,eACFhC,OAAA;MAAMsB,EAAE,EAAC,yBAAyB;MAACI,SAAS,EAAC;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC9C;AAEpB;AAAC7B,EAAA,CAxCQF,eAAe;AAAAgC,EAAA,GAAfhC,eAAe;AA0CxB,eAAeA,eAAe;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}