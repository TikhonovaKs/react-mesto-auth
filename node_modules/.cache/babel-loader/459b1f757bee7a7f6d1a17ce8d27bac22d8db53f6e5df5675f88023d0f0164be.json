{"ast":null,"code":"var _jsxFileName = \"/Users/tikhonovaks/dev/react-mesto-auth/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Authentication from './Authentication';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login(_ref) {\n  _s();\n  let {\n    handleLogin\n  } = _ref;\n  // Состояние формы входа в систему formValue (электронная почта, пароль).\n  const [formValue, setFormValue] = useState({\n    password: '',\n    email: ''\n  });\n  // Состояние сообщения об ошибке:\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Обработчик изменения полей формы:\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValue({\n      ...formValue,\n      [name]: value\n    });\n  };\n\n  // Обработчик отправки формы:\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!formValue.password || !formValue.email) {\n      setErrorMessage('Both fields are required');\n      return;\n    }\n    handleLogin(formValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Authentication, {\n    authenticationName: \"login\",\n    authenticationTitle: \"\\u0412\\u0445\\u043E\\u0434\",\n    onSubmit: handleSubmit,\n    buttonName: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      type: \"email\",\n      name: \"email\",\n      autoComplete: \"email\",\n      className: \"authentication__input authentication__input_data_email\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"40\",\n      placeholder: \"Email\",\n      value: formValue.email,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"input-email-error\",\n      className: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      autoComplete: \"new-password\",\n      className: \"authentication__input authentication__input_data_password\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"200\",\n      placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      value: formValue.password,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"input-password-error\",\n      className: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"djSrU1pZgoAAo7KFh4Vtf7mNkBw=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Authentication","jsxDEV","_jsxDEV","Login","_ref","_s","handleLogin","formValue","setFormValue","password","email","errorMessage","setErrorMessage","handleChange","e","name","value","target","handleSubmit","preventDefault","authenticationName","authenticationTitle","onSubmit","buttonName","children","id","type","autoComplete","className","required","minLength","maxLength","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tikhonovaks/dev/react-mesto-auth/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Authentication from './Authentication';\n\nfunction Login({ handleLogin }) {\n  // Состояние формы входа в систему formValue (электронная почта, пароль).\n  const [formValue, setFormValue] = useState({\n    password: '',\n    email: '',\n  });\n  // Состояние сообщения об ошибке:\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Обработчик изменения полей формы:\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValue({\n      ...formValue,\n      [name]: value,\n    });\n  };\n\n  // Обработчик отправки формы:\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!formValue.password || !formValue.email) {\n      setErrorMessage('Both fields are required');\n      return;\n    }\n    handleLogin(formValue);\n  };\n\n  return (\n    <Authentication authenticationName=\"login\" authenticationTitle=\"Вход\" onSubmit={handleSubmit} buttonName=\"Войти\">\n      <input\n        id=\"email\"\n        type=\"email\"\n        name=\"email\"\n        autoComplete=\"email\"\n        className=\"authentication__input authentication__input_data_email\"\n        required\n        minLength=\"2\"\n        maxLength=\"40\"\n        placeholder=\"Email\"\n        value={formValue.email}\n        onChange={handleChange}\n      />\n      <span id=\"input-email-error\" className=\"error\">\n        {errorMessage}\n      </span>\n      <input\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        autoComplete=\"new-password\"\n        className=\"authentication__input authentication__input_data_password\"\n        required\n        minLength=\"2\"\n        maxLength=\"200\"\n        placeholder=\"Пароль\"\n        value={formValue.password}\n        onChange={handleChange}\n      />\n      <span id=\"input-password-error\" className=\"error\">\n        {errorMessage}\n      </span>\n    </Authentication>\n  );\n}\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,KAAKA,CAAAC,IAAA,EAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAY,CAAC,GAAAF,IAAA;EAC5B;EACA,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC;IACzCU,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC,CAAC;EACF;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAMc,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCT,YAAY,CAAC;MACX,GAAGD,SAAS;MACZ,CAACQ,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAME,YAAY,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,EAAE;IAClB,IAAI,CAACZ,SAAS,CAACE,QAAQ,IAAI,CAACF,SAAS,CAACG,KAAK,EAAE;MAC3CE,eAAe,CAAC,0BAA0B,CAAC;MAC3C;IACF;IACAN,WAAW,CAACC,SAAS,CAAC;EACxB,CAAC;EAED,oBACEL,OAAA,CAACF,cAAc;IAACoB,kBAAkB,EAAC,OAAO;IAACC,mBAAmB,EAAC,0BAAM;IAACC,QAAQ,EAAEJ,YAAa;IAACK,UAAU,EAAC,gCAAO;IAAAC,QAAA,gBAC9GtB,OAAA;MACEuB,EAAE,EAAC,OAAO;MACVC,IAAI,EAAC,OAAO;MACZX,IAAI,EAAC,OAAO;MACZY,YAAY,EAAC,OAAO;MACpBC,SAAS,EAAC,wDAAwD;MAClEC,QAAQ;MACRC,SAAS,EAAC,GAAG;MACbC,SAAS,EAAC,IAAI;MACdC,WAAW,EAAC,OAAO;MACnBhB,KAAK,EAAET,SAAS,CAACG,KAAM;MACvBuB,QAAQ,EAAEpB;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvB,eACFnC,OAAA;MAAMuB,EAAE,EAAC,mBAAmB;MAACG,SAAS,EAAC,OAAO;MAAAJ,QAAA,EAC3Cb;IAAY;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACPnC,OAAA;MACEuB,EAAE,EAAC,UAAU;MACbV,IAAI,EAAC,UAAU;MACfW,IAAI,EAAC,UAAU;MACfC,YAAY,EAAC,cAAc;MAC3BC,SAAS,EAAC,2DAA2D;MACrEC,QAAQ;MACRC,SAAS,EAAC,GAAG;MACbC,SAAS,EAAC,KAAK;MACfC,WAAW,EAAC,sCAAQ;MACpBhB,KAAK,EAAET,SAAS,CAACE,QAAS;MAC1BwB,QAAQ,EAAEpB;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvB,eACFnC,OAAA;MAAMuB,EAAE,EAAC,sBAAsB;MAACG,SAAS,EAAC,OAAO;MAAAJ,QAAA,EAC9Cb;IAAY;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACQ;AAErB;AAAChC,EAAA,CAhEQF,KAAK;AAAAmC,EAAA,GAALnC,KAAK;AAkEd,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}